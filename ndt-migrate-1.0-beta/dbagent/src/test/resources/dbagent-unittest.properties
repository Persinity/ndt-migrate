#
# Copyright 2015 Persinity Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Contains expected DDL SQL. Used by com.persinity.ndt.dbagent.relational unit tests

# SQL used for creation of the change log population trigger for testtable(id NUMBER(1), name VARCHAR2(20))
sql.clog_trigger=\
CREATE OR REPLACE TRIGGER trg_clog_testtable \n\
\t	AFTER INSERT OR UPDATE OR DELETE \n\
\t	ON testtable \n\
\t	FOR EACH ROW \n\
\t	DECLARE \n\
\t		l_clog_rec ndtsrc.clog_testtable%ROWTYPE; \n\
\t	BEGIN \n\
\t		-- set PK \n\
\t		l_clog_rec.gid := ndtsrc.seq_gid.NEXTVAL; \n\
\t		l_clog_rec.tid := dbms_transaction.local_transaction_id; \n\
\n\
\t		-- Set Pk values and change type \n\
\t		IF INSERTING THEN \n\
\t			l_clog_rec.ctype := 'I'; \n\
\t			l_clog_rec.id := :new.id; \n\
\t		ELSIF UPDATING THEN \n\
\t			l_clog_rec.ctype := 'U'; \n\
\t			l_clog_rec.id := :new.id; \n\
\t		ELSE \n\
\t			l_clog_rec.ctype := 'D'; \n\
\t			l_clog_rec.id := :old.id; \n\
\t		END IF; \n\
\n\
\t		-- Set row values \n\
\t		l_clog_rec.name := :new.name; \n\
\n\
\t		-- Log \n\
\t		INSERT INTO ndtsrc.clog_testtable VALUES l_clog_rec; \n\
\t  EXCEPTION WHEN OTHERS THEN \n\
\t    ndtsrc.ndt_common.log(ndtsrc.ndt_common.error, $$PLSQL_UNIT||':'||$$PLSQL_LINE, SQLCODE||':'||SQLERRM); \n\
\t	END;

# SQL used for creation of the transaction log population trigger for testtable(id number(1), name varchar2(20))
sql.trlog_trigger=\
CREATE OR REPLACE TRIGGER trg_trlog_testtable \n\
\t	AFTER INSERT OR UPDATE OR DELETE \n\
\t	ON testtable \n\
\t	BEGIN \n\
\t		ndtsrc.clog.trlog_new_entry_for('clog_testtable', dbms_transaction.local_transaction_id); \n\
\t  EXCEPTION WHEN OTHERS THEN \n\
\t    ndtsrc.ndt_common.log(ndtsrc.ndt_common.error, $$PLSQL_UNIT||':'||$$PLSQL_LINE, SQLCODE||':'||SQLERRM); \n\
\t	END;

sql.testtable=\
CREATE TABLE testtable (\n\
\t		id NUMBER(1) CONSTRAINT pk_testtable PRIMARY KEY, \n\
\t		name VARCHAR2(20)\n\
\t	)
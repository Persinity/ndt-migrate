haka {
  # The name of the workers pool used acros cluster nodes.
  pool-name = "WorkersBackstage"

  # Pool implementation true for cluster or false for local.
  pool-impl-cluster = false

  # The number of workers in the pool to start.
  workers = 10

  # Max parallel statfull jobs per worker, 0 for infinity.
  max-jobs-per-worker = 0

  # The delay before resend message to the pool.
  msg-resend-delay = 3 seconds

  # Period on which the progress of the jobs is checked.
  watchdog-period = 120 seconds

  # Timeout period for status update should be greater then the watchdog-period.
  # It should be big enough to handle the time for executing an atomic Job.
  status-update-timeout = 300 seconds

  # Period on which the JobProducer.process(...) will be recalled
  # when its last return was an idle job.
  idlejob-period = 1 seconds

  # Enable or disable persistence of the jobs for recovery.
  # It is experimental and for now will be disabled by default.
  enable-persistence = false

  # Haka main job workers for now these are supported.
  #
  # com.persinity.haka.impl.actor.execjob.ExecJobWorker
  #     Listen for NewMsg Job at /user/ExecJobWorker-<nodeId> executes the Job
  #     in the pool and returns as result ProcessedMsg.
  #
  # com.persinity.haka.impl.actor.rootjob.RootJobWorker
  #     Creates a new Job configurable from haka.root-job-worker {...}
  #     and executes it in the pool. Watchdog for timeout and resends
  #     the root Job until it is done.
  main-job-workers = ["com.persinity.haka.impl.actor.execjob.ExecJobWorker"]

  executor {
    # Concurent exec jobs.
    job-pool-size = 4
  }

  # Example RootJobWorker config.
  root-job-worker {
    # Minimum cluster UP members before start root job fire.
    min-cluster-up-members-before-fire = 3

    # Period on which to check for cluster UP members.
    cluster-up-members-check-period = 3 seconds

    # The class of the root job that should implement the com.persinity.haka.Job.
    job-class = "com.test.JobClass"

    # Timeout to restart root job in case no any progress.
    job-timeout = 600 seconds

    # TODO add flag to shutdown the akka system if job is done
  }
}
